generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

enum TaskStatus {
  pending
  in_progress
  completed
}

enum TaskPriority {
  low
  medium
  high
}

enum ProjectRole {
  owner
  member
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  password     String   // Store hashed passwords
  name         String
  profileImage String?
  createdAt    DateTime @default(now())
  projects     Project[]
  tasks        Task[]
  comments     Comment[]
  memberships  UserProjectMembership[]
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  ownerId     String   @map("owner_id")
  owner       User     @relation(fields: [ownerId], references: [id])
  createdAt   DateTime @default(now())
  tasks       Task[]
  memberships UserProjectMembership[]
}

model Task {
  id          String   @id @default(uuid())
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  title       String
  description String?
  status      TaskStatus @default(pending)
  priority    TaskPriority
  assignedTo  User?    @relation(fields: [assignedToId], references: [id])
  assignedToId String?
  dueDate     DateTime?
  createdAt   DateTime @default(now())
  comments    Comment[]
  tags        TaskTag[]
}

model Comment {
  id        String   @id @default(uuid())
  taskId    String
  task      Task     @relation(fields: [taskId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  content   String
  createdAt DateTime @default(now())
}

model Tag {
  id    String @id @default(uuid())
  name  String @unique
  tasks TaskTag[]
}

model TaskTag {
  taskId String
  tagId  String
  task   Task @relation(fields: [taskId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([taskId, tagId])
}

model UserProjectMembership {
  userId    String
  projectId String
  role      ProjectRole
  user      User    @relation(fields: [userId], references: [id])
  project   Project @relation(fields: [projectId], references: [id])

  @@id([userId, projectId])
}